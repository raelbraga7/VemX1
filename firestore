rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Função auxiliar para verificar se o usuário está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }

    // Função auxiliar para verificar se o usuário é dono do documento
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Função para verificar se o usuário é participante da pelada
    function isPeladaPlayer(peladaId) {
      let pelada = get(/databases/$(database)/documents/peladas/$(peladaId));
      return pelada != null && (
        pelada.data.players.hasAny([request.auth.uid]) || 
        pelada.data.ownerId == request.auth.uid ||
        (pelada.data.confirmados != null && pelada.data.confirmados.hasAny([{'id': request.auth.uid}]))
      );
    }

    // Regras para a coleção users
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
      
      // Permitir acesso aos tokens FCM do usuário
      match /fcm_tokens/{tokenId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Regras para a coleção de notificações
    match /notifications/{notificationId} {
      allow create: if isAuthenticated();
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Regras para a coleção de peladas
    match /peladas/{peladaId} {
      allow create: if isAuthenticated();
      allow read: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.ownerId == request.auth.uid || 
        isPeladaPlayer(peladaId) ||
        // Permitir que qualquer usuário autenticado confirme presença
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['confirmados', 'ranking']))
      );
      allow delete: if isAuthenticated() && resource.data.ownerId == request.auth.uid;
    }

    // Regras para a coleção partidas
    match /partidas/{partidaId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        get(/databases/$(database)/documents/peladas/$(resource.data.peladaId)).data.players.hasAny([request.auth.uid]) ||
        get(/databases/$(database)/documents/peladas/$(resource.data.peladaId)).data.ownerId == request.auth.uid
      );
      allow delete: if isAuthenticated() && 
        get(/databases/$(database)/documents/peladas/$(resource.data.peladaId)).data.ownerId == request.auth.uid;
    }
  }
} 